export type VulnerabilityReport = {
  cluster: string;
  description: string;
  fixedVersion: string;
  installedVersion: string;
  lastModifiedDate: string;
  links: string[];
  namespace: string;
  packagePURL: string;
  pod_id: string;
  primaryLink: string;
  publishedDate: string;
  resource: string;
  score: number;
  severity: string;
  target: string;
  title: string;
  vulnerabilityID: string;
  hash: string;
};

export async function fetchVulnerabilities(
  cluster: string,
  namespace: string
): Promise<VulnerabilityReport[]> {
  const params = new URLSearchParams();
  if (cluster && cluster !== "all") params.append("cluster", cluster);
  if (namespace && namespace !== "all") params.append("namespace", namespace);

  const url = `http://localhost:8000/vulnerabilities/?${params.toString()}`;
  const res = await fetch(url);
  if (!res.ok) throw new Error("Failed to fetch vulnerabilities");
  return res.json();
}
